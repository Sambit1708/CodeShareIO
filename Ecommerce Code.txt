private final String fileName = "Fund_Dividend_Notification";

    public EmailNotificationResponse sendEmailNotification (SvcFlowRequestWrapper requestWrapper) {
        HashMap<String, String> queryParams = requestWrapper.getQueryParams();
        String emailType = queryParams.get(EMAILNOTIFYTYPE_HEADER_NAME);
        String cutoffDateStr = queryParams.get(REPORTDATE_HEADER_NAME);

        if(emailType != null && emailType.equalsIgnoreCase("Fund_Monthly_Notification")) {
            generateMonthlyCutOfDateEmail(requestWrapper, cutoffDateStr);
        }

        EmailNotificationResponse notificationResponse = new EmailNotificationResponse();
        notificationResponse.setApiCode (200);
        notificationResponse.setData("Email generated successfully");

        return notificationResponse;

    }


    public void generateMonthlyCutOfDateEmail(SvcFlowRequestWrapper requestWrapper, String cutoffDateStr) { 1 usage
        LocalDate cutoffDate = LocalDate.parse(cutOffDateStr);

        Object fourBusinessDayObj fundCodeDividendUtils.getBusinessDateForGivenDate(cutoffDate, "-4", requestWrapper);
        Object oneBusinessDayObj = fundCodeDividendUtils.getBusinessDateForGivenDate (cutoffDate, "-1", requestWrapper);
        
        LocalDate fourBusinessDay = LocalDate.parse(fourBusinessDayObj.toString());
        LocalDateTime oneBusinessDayTime = LocalDate.parse(oneBusinessDayObj.toString()).atTime(hour: 12, minute: 0, second: 0, nanoOfSecond: 0);

        if (true) {
            List<FundDividendList> list = fundDividendListRepository.findAll();
            EmailNotify emailNotificationFromDB = emailNotificationRepository.findByFileNameAndEmailType(fileName, emailType);

            for (FundDividendList fundList: list) {
                String message emailNotificationFromDB.getEmailContent();
                message = message.replace(target: "<<Fund Name>>", fundList.getFundName());
                message message.replace(target: "<<Cut-off datetime (12:00 noon of YYYY-MM-DD)>>", oneBusiness DayTime.toString());
                emailNotificationFromDB.setEmailContent(message);
                sendEmailNotify (requestWrapper, emailNotificationFromDB);
            }
        }
    }
