public void generateMonthlyCutOfDateEmail(SvcFlowRequestWrapper svcFlowRequestWrapper) {
        String fileName = "Fund_Dividend_Notification";
        String emailType = "Fund_Monthly_Notification";

        HashMap<String, String> businessDay = fundCodeDividendUtils.calculateBusinessDayWithCutOffDateTime(requestWrapper);
        String cutOffDateStr = emailMap.get("cutOffDateTime");

        LocalDate cutOffDate = LocalDate.parse(cutOffDateStr);

        Object fourBusinessDayObj = fundCodeDividendUtils.getBusinessDateForGivenDate(cutOffDate, "-4");
        Object oneBusinessDayObj = fundCodeDividendUtils.getBusinessDateForGivenDate(cutOffDate, "-1");
    
        LocalDate fourBusinessDay = LocalDate.parse(fourBusinessDayObj.toString());
        LocalDateTime oneBusinessDayTime = LocalDate.parse(oneBusinessDayObj.toString()).atTime(12, 0, 0, 0);

        if(LocalDate.now().isEqual(fourBusinessDay)) {
            List<FundDividendList> list = fundDividendListRepository.findAll();
            EmailNotificationData emailNotificationFromDB = emailNotificationDataRepo.findByFileNameAndEmailType(fileName, emailType);
            for(FundDividendList fundList : list) {
    
                String message = emailNotificationFromDB.getEmailContent();
                message = message.replace("<<Fund Name>>", fundList.getFundName());
                message = message.replace("<<Cut-off datetime (12:00 noon of YYYY-MM-DD)>>", oneBusinessDayTime);

                emailNotificationFromDB.setEmailContent(message);
                sendEmailNotification(svcFlowRequestWrapper, emailNotificationFromDB);
            }
        }
    }